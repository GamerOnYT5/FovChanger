local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")

-- Variable to store the last known position of the frame
local lastPosition = UDim2.new(0.5, -100, 0.5, -50)
-- Variable to store the custom FOV
local customFOV = nil

-- Function to initialize the GUI
local function initializeGUI()
    -- Parent the GUI elements to CoreGui
    ScreenGui.Parent = game.CoreGui
    Frame.Parent = ScreenGui
    TextBox.Parent = Frame
    TextButton.Parent = Frame

    -- Set properties for Frame
    Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Frame.Position = lastPosition
    Frame.Size = UDim2.new(0, 200, 0, 100)

    -- Set properties for TextBox
    TextBox.Position = UDim2.new(0.1, 0, 0.2, 0)
    TextBox.Size = UDim2.new(0.8, 0, 0.3, 0)
    TextBox.PlaceholderText = "Enter FOV"
    TextBox.Text = ""
    TextBox.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    TextBox.TextScaled = true

    -- Set properties for TextButton
    TextButton.Position = UDim2.new(0.1, 0, 0.6, 0)
    TextButton.Size = UDim2.new(0.8, 0, 0.3, 0)
    TextButton.Text = "Change FOV"
    TextButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    TextButton.TextScaled = true

    -- Function to change the FOV
    local function changeFOV()
        local newFOV = tonumber(TextBox.Text)
        if newFOV and newFOV > 0 then
            customFOV = newFOV
            game.Workspace.CurrentCamera.FieldOfView = newFOV
        else
            TextBox.Text = ""
            TextBox.PlaceholderText = "Invalid FOV"
        end
    end

    -- Connect the button to the changeFOV function
    TextButton.MouseButton1Click:Connect(changeFOV)

    -- Variables to handle dragging
    local dragging = false
    local dragInput, mousePos, framePos

    -- Function to update the frame position
    local function update(input)
        local delta = input.Position - mousePos
        Frame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        lastPosition = Frame.Position
    end

    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = Frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)
end

-- Function to maintain custom FOV
local function maintainCustomFOV()
    game.Workspace.CurrentCamera:GetPropertyChangedSignal("FieldOfView"):Connect(function()
        if customFOV and game.Workspace.CurrentCamera.FieldOfView ~= customFOV then
            game.Workspace.CurrentCamera.FieldOfView = customFOV
        end
    end)
end

-- Initialize GUI on script run
initializeGUI()

-- Ensure GUI shows after player respawn
game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    initializeGUI()
    maintainCustomFOV()
end)

-- Start maintaining custom FOV on initial load
maintainCustomFOV()
